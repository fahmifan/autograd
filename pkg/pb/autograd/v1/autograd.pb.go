// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: autograd/v1/autograd.proto

package autogradv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignmentType int32

const (
	AssignmentType_ASSIGNMENT_TYPE_UNKNOWN AssignmentType = 0
	AssignmentType_ASSIGNMENT_TYPE_INPUT   AssignmentType = 1
	AssignmentType_ASSIGNMENT_TYPE_OUTPUT  AssignmentType = 2
)

// Enum value maps for AssignmentType.
var (
	AssignmentType_name = map[int32]string{
		0: "ASSIGNMENT_TYPE_UNKNOWN",
		1: "ASSIGNMENT_TYPE_INPUT",
		2: "ASSIGNMENT_TYPE_OUTPUT",
	}
	AssignmentType_value = map[string]int32{
		"ASSIGNMENT_TYPE_UNKNOWN": 0,
		"ASSIGNMENT_TYPE_INPUT":   1,
		"ASSIGNMENT_TYPE_OUTPUT":  2,
	}
)

func (x AssignmentType) Enum() *AssignmentType {
	p := new(AssignmentType)
	*p = x
	return p
}

func (x AssignmentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AssignmentType) Descriptor() protoreflect.EnumDescriptor {
	return file_autograd_v1_autograd_proto_enumTypes[0].Descriptor()
}

func (AssignmentType) Type() protoreflect.EnumType {
	return &file_autograd_v1_autograd_proto_enumTypes[0]
}

func (x AssignmentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AssignmentType.Descriptor instead.
func (AssignmentType) EnumDescriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{0}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{0}
}

type CreatedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CreatedResponse) Reset() {
	*x = CreatedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatedResponse) ProtoMessage() {}

func (x *CreatedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatedResponse.ProtoReflect.Descriptor instead.
func (*CreatedResponse) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{1}
}

func (x *CreatedResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreatedResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{2}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type FindByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindByIDRequest) Reset() {
	*x = FindByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByIDRequest) ProtoMessage() {}

func (x *FindByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByIDRequest.ProtoReflect.Descriptor instead.
func (*FindByIDRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{3}
}

func (x *FindByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteByIDRequest) Reset() {
	*x = DeleteByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteByIDRequest) ProtoMessage() {}

func (x *DeleteByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteByIDRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PaginationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page      int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Total     int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	TotalPage int32 `protobuf:"varint,4,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
}

func (x *PaginationMetadata) Reset() {
	*x = PaginationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationMetadata) ProtoMessage() {}

func (x *PaginationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationMetadata.ProtoReflect.Descriptor instead.
func (*PaginationMetadata) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{5}
}

func (x *PaginationMetadata) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationMetadata) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationMetadata) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PaginationMetadata) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{6}
}

func (x *PaginationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type CreateManagedUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Role  string `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *CreateManagedUserRequest) Reset() {
	*x = CreateManagedUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateManagedUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateManagedUserRequest) ProtoMessage() {}

func (x *CreateManagedUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateManagedUserRequest.ProtoReflect.Descriptor instead.
func (*CreateManagedUserRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{7}
}

func (x *CreateManagedUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateManagedUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateManagedUserRequest) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type TimestampMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt string `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TimestampMetadata) Reset() {
	*x = TimestampMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimestampMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampMetadata) ProtoMessage() {}

func (x *TimestampMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampMetadata.ProtoReflect.Descriptor instead.
func (*TimestampMetadata) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{8}
}

func (x *TimestampMetadata) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TimestampMetadata) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type AssignmentFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description       string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Url               string             `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	TimestampMetadata *TimestampMetadata `protobuf:"bytes,5,opt,name=timestamp_metadata,json=timestampMetadata,proto3" json:"timestamp_metadata,omitempty"`
}

func (x *AssignmentFile) Reset() {
	*x = AssignmentFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentFile) ProtoMessage() {}

func (x *AssignmentFile) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentFile.ProtoReflect.Descriptor instead.
func (*AssignmentFile) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{9}
}

func (x *AssignmentFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssignmentFile) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AssignmentFile) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AssignmentFile) GetTimestampMetadata() *TimestampMetadata {
	if x != nil {
		return x.TimestampMetadata
	}
	return nil
}

type SubmissionFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url               string             `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	TimestampMetadata *TimestampMetadata `protobuf:"bytes,3,opt,name=timestamp_metadata,json=timestampMetadata,proto3" json:"timestamp_metadata,omitempty"`
}

func (x *SubmissionFile) Reset() {
	*x = SubmissionFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmissionFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmissionFile) ProtoMessage() {}

func (x *SubmissionFile) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmissionFile.ProtoReflect.Descriptor instead.
func (*SubmissionFile) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{10}
}

func (x *SubmissionFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SubmissionFile) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SubmissionFile) GetTimestampMetadata() *TimestampMetadata {
	if x != nil {
		return x.TimestampMetadata
	}
	return nil
}

type Submitter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Submitter) Reset() {
	*x = Submitter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submitter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submitter) ProtoMessage() {}

func (x *Submitter) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submitter.ProtoReflect.Descriptor instead.
func (*Submitter) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{11}
}

func (x *Submitter) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Submitter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Assigner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Assigner) Reset() {
	*x = Assigner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assigner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assigner) ProtoMessage() {}

func (x *Assigner) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assigner.ProtoReflect.Descriptor instead.
func (*Assigner) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{12}
}

func (x *Assigner) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Assigner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Assignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Assigner          *Assigner          `protobuf:"bytes,4,opt,name=assigner,proto3" json:"assigner,omitempty"`
	CaseInputFile     *AssignmentFile    `protobuf:"bytes,5,opt,name=case_input_file,json=caseInputFile,proto3" json:"case_input_file,omitempty"`
	CaseOutputFile    *AssignmentFile    `protobuf:"bytes,6,opt,name=case_output_file,json=caseOutputFile,proto3" json:"case_output_file,omitempty"`
	DeadlineAt        string             `protobuf:"bytes,7,opt,name=deadline_at,json=deadlineAt,proto3" json:"deadline_at,omitempty"`
	TimestampMetadata *TimestampMetadata `protobuf:"bytes,8,opt,name=timestamp_metadata,json=timestampMetadata,proto3" json:"timestamp_metadata,omitempty"`
}

func (x *Assignment) Reset() {
	*x = Assignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assignment) ProtoMessage() {}

func (x *Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assignment.ProtoReflect.Descriptor instead.
func (*Assignment) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{13}
}

func (x *Assignment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Assignment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Assignment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Assignment) GetAssigner() *Assigner {
	if x != nil {
		return x.Assigner
	}
	return nil
}

func (x *Assignment) GetCaseInputFile() *AssignmentFile {
	if x != nil {
		return x.CaseInputFile
	}
	return nil
}

func (x *Assignment) GetCaseOutputFile() *AssignmentFile {
	if x != nil {
		return x.CaseOutputFile
	}
	return nil
}

func (x *Assignment) GetDeadlineAt() string {
	if x != nil {
		return x.DeadlineAt
	}
	return ""
}

func (x *Assignment) GetTimestampMetadata() *TimestampMetadata {
	if x != nil {
		return x.TimestampMetadata
	}
	return nil
}

type Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Assignment        *Assignment        `protobuf:"bytes,2,opt,name=assignment,proto3" json:"assignment,omitempty"`
	Submitter         *Submitter         `protobuf:"bytes,3,opt,name=submitter,proto3" json:"submitter,omitempty"`
	SubmissionFile    *SubmissionFile    `protobuf:"bytes,4,opt,name=submission_file,json=submissionFile,proto3" json:"submission_file,omitempty"`
	TimestampMetadata *TimestampMetadata `protobuf:"bytes,5,opt,name=timestamp_metadata,json=timestampMetadata,proto3" json:"timestamp_metadata,omitempty"`
	SubmissionCode    string             `protobuf:"bytes,6,opt,name=submission_code,json=submissionCode,proto3" json:"submission_code,omitempty"`
}

func (x *Submission) Reset() {
	*x = Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Submission) ProtoMessage() {}

func (x *Submission) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Submission.ProtoReflect.Descriptor instead.
func (*Submission) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{14}
}

func (x *Submission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Submission) GetAssignment() *Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

func (x *Submission) GetSubmitter() *Submitter {
	if x != nil {
		return x.Submitter
	}
	return nil
}

func (x *Submission) GetSubmissionFile() *SubmissionFile {
	if x != nil {
		return x.SubmissionFile
	}
	return nil
}

func (x *Submission) GetTimestampMetadata() *TimestampMetadata {
	if x != nil {
		return x.TimestampMetadata
	}
	return nil
}

func (x *Submission) GetSubmissionCode() string {
	if x != nil {
		return x.SubmissionCode
	}
	return ""
}

type UpdateAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CaseInputFileId  string `protobuf:"bytes,4,opt,name=case_input_file_id,json=caseInputFileId,proto3" json:"case_input_file_id,omitempty"`
	CaseOutputFileId string `protobuf:"bytes,5,opt,name=case_output_file_id,json=caseOutputFileId,proto3" json:"case_output_file_id,omitempty"`
}

func (x *UpdateAssignmentRequest) Reset() {
	*x = UpdateAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAssignmentRequest) ProtoMessage() {}

func (x *UpdateAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAssignmentRequest.ProtoReflect.Descriptor instead.
func (*UpdateAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateAssignmentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetCaseInputFileId() string {
	if x != nil {
		return x.CaseInputFileId
	}
	return ""
}

func (x *UpdateAssignmentRequest) GetCaseOutputFileId() string {
	if x != nil {
		return x.CaseOutputFileId
	}
	return ""
}

type CreateAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description      string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CaseInputFileId  string `protobuf:"bytes,3,opt,name=case_input_file_id,json=caseInputFileId,proto3" json:"case_input_file_id,omitempty"`
	CaseOutputFileId string `protobuf:"bytes,4,opt,name=case_output_file_id,json=caseOutputFileId,proto3" json:"case_output_file_id,omitempty"`
	DeadlineAt       string `protobuf:"bytes,5,opt,name=deadline_at,json=deadlineAt,proto3" json:"deadline_at,omitempty"`
}

func (x *CreateAssignmentRequest) Reset() {
	*x = CreateAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAssignmentRequest) ProtoMessage() {}

func (x *CreateAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAssignmentRequest.ProtoReflect.Descriptor instead.
func (*CreateAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{16}
}

func (x *CreateAssignmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAssignmentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAssignmentRequest) GetCaseInputFileId() string {
	if x != nil {
		return x.CaseInputFileId
	}
	return ""
}

func (x *CreateAssignmentRequest) GetCaseOutputFileId() string {
	if x != nil {
		return x.CaseOutputFileId
	}
	return ""
}

func (x *CreateAssignmentRequest) GetDeadlineAt() string {
	if x != nil {
		return x.DeadlineAt
	}
	return ""
}

type CreateSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId string `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	SubmitterId  string `protobuf:"bytes,2,opt,name=submitter_id,json=submitterId,proto3" json:"submitter_id,omitempty"`
	SourceFileId string `protobuf:"bytes,3,opt,name=source_file_id,json=sourceFileId,proto3" json:"source_file_id,omitempty"`
}

func (x *CreateSubmissionRequest) Reset() {
	*x = CreateSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubmissionRequest) ProtoMessage() {}

func (x *CreateSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubmissionRequest.ProtoReflect.Descriptor instead.
func (*CreateSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{17}
}

func (x *CreateSubmissionRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *CreateSubmissionRequest) GetSubmitterId() string {
	if x != nil {
		return x.SubmitterId
	}
	return ""
}

func (x *CreateSubmissionRequest) GetSourceFileId() string {
	if x != nil {
		return x.SourceFileId
	}
	return ""
}

type UpdateSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubmitterId  string `protobuf:"bytes,2,opt,name=submitter_id,json=submitterId,proto3" json:"submitter_id,omitempty"`
	SourceFileId string `protobuf:"bytes,3,opt,name=source_file_id,json=sourceFileId,proto3" json:"source_file_id,omitempty"`
}

func (x *UpdateSubmissionRequest) Reset() {
	*x = UpdateSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubmissionRequest) ProtoMessage() {}

func (x *UpdateSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubmissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateSubmissionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSubmissionRequest) GetSubmitterId() string {
	if x != nil {
		return x.SubmitterId
	}
	return ""
}

func (x *UpdateSubmissionRequest) GetSourceFileId() string {
	if x != nil {
		return x.SourceFileId
	}
	return ""
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{19}
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{20}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type FindAllAssignmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationRequest *PaginationRequest `protobuf:"bytes,1,opt,name=pagination_request,json=paginationRequest,proto3" json:"pagination_request,omitempty"`
}

func (x *FindAllAssignmentsRequest) Reset() {
	*x = FindAllAssignmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllAssignmentsRequest) ProtoMessage() {}

func (x *FindAllAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*FindAllAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{21}
}

func (x *FindAllAssignmentsRequest) GetPaginationRequest() *PaginationRequest {
	if x != nil {
		return x.PaginationRequest
	}
	return nil
}

type FindAllAssignmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments        []*Assignment       `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	PaginationMetadata *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination_metadata,json=paginationMetadata,proto3" json:"pagination_metadata,omitempty"`
}

func (x *FindAllAssignmentsResponse) Reset() {
	*x = FindAllAssignmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllAssignmentsResponse) ProtoMessage() {}

func (x *FindAllAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*FindAllAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{22}
}

func (x *FindAllAssignmentsResponse) GetAssignments() []*Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *FindAllAssignmentsResponse) GetPaginationMetadata() *PaginationMetadata {
	if x != nil {
		return x.PaginationMetadata
	}
	return nil
}

type ManagedUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email             string             `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Role              string             `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
	TimestampMetadata *TimestampMetadata `protobuf:"bytes,5,opt,name=timestamp_metadata,json=timestampMetadata,proto3" json:"timestamp_metadata,omitempty"`
}

func (x *ManagedUser) Reset() {
	*x = ManagedUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManagedUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedUser) ProtoMessage() {}

func (x *ManagedUser) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedUser.ProtoReflect.Descriptor instead.
func (*ManagedUser) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{23}
}

func (x *ManagedUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ManagedUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ManagedUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ManagedUser) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ManagedUser) GetTimestampMetadata() *TimestampMetadata {
	if x != nil {
		return x.TimestampMetadata
	}
	return nil
}

type FindAllManagedUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationRequest *PaginationRequest `protobuf:"bytes,1,opt,name=pagination_request,json=paginationRequest,proto3" json:"pagination_request,omitempty"`
}

func (x *FindAllManagedUsersRequest) Reset() {
	*x = FindAllManagedUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllManagedUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllManagedUsersRequest) ProtoMessage() {}

func (x *FindAllManagedUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllManagedUsersRequest.ProtoReflect.Descriptor instead.
func (*FindAllManagedUsersRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{24}
}

func (x *FindAllManagedUsersRequest) GetPaginationRequest() *PaginationRequest {
	if x != nil {
		return x.PaginationRequest
	}
	return nil
}

type FindAllManagedUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagedUsers       []*ManagedUser      `protobuf:"bytes,1,rep,name=managed_users,json=managedUsers,proto3" json:"managed_users,omitempty"`
	PaginationMetadata *PaginationMetadata `protobuf:"bytes,2,opt,name=pagination_metadata,json=paginationMetadata,proto3" json:"pagination_metadata,omitempty"`
}

func (x *FindAllManagedUsersResponse) Reset() {
	*x = FindAllManagedUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllManagedUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllManagedUsersResponse) ProtoMessage() {}

func (x *FindAllManagedUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllManagedUsersResponse.ProtoReflect.Descriptor instead.
func (*FindAllManagedUsersResponse) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{25}
}

func (x *FindAllManagedUsersResponse) GetManagedUsers() []*ManagedUser {
	if x != nil {
		return x.ManagedUsers
	}
	return nil
}

func (x *FindAllManagedUsersResponse) GetPaginationMetadata() *PaginationMetadata {
	if x != nil {
		return x.PaginationMetadata
	}
	return nil
}

type FindAllSubmissionsForAssignmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationRequest *PaginationRequest `protobuf:"bytes,1,opt,name=pagination_request,json=paginationRequest,proto3" json:"pagination_request,omitempty"`
	AssignmentId      string             `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
}

func (x *FindAllSubmissionsForAssignmentRequest) Reset() {
	*x = FindAllSubmissionsForAssignmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllSubmissionsForAssignmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllSubmissionsForAssignmentRequest) ProtoMessage() {}

func (x *FindAllSubmissionsForAssignmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllSubmissionsForAssignmentRequest.ProtoReflect.Descriptor instead.
func (*FindAllSubmissionsForAssignmentRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{26}
}

func (x *FindAllSubmissionsForAssignmentRequest) GetPaginationRequest() *PaginationRequest {
	if x != nil {
		return x.PaginationRequest
	}
	return nil
}

func (x *FindAllSubmissionsForAssignmentRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

type FindAllSubmissionsForAssignmentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submissions    []*FindAllSubmissionsForAssignmentResponse_Submission `protobuf:"bytes,1,rep,name=submissions,proto3" json:"submissions,omitempty"`
	AssignmentId   string                                                `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	AssignmentName string                                                `protobuf:"bytes,3,opt,name=assignment_name,json=assignmentName,proto3" json:"assignment_name,omitempty"`
	AssignerId     string                                                `protobuf:"bytes,4,opt,name=assigner_id,json=assignerId,proto3" json:"assigner_id,omitempty"`
	AssignerName   string                                                `protobuf:"bytes,5,opt,name=assigner_name,json=assignerName,proto3" json:"assigner_name,omitempty"`
}

func (x *FindAllSubmissionsForAssignmentResponse) Reset() {
	*x = FindAllSubmissionsForAssignmentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllSubmissionsForAssignmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllSubmissionsForAssignmentResponse) ProtoMessage() {}

func (x *FindAllSubmissionsForAssignmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllSubmissionsForAssignmentResponse.ProtoReflect.Descriptor instead.
func (*FindAllSubmissionsForAssignmentResponse) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{27}
}

func (x *FindAllSubmissionsForAssignmentResponse) GetSubmissions() []*FindAllSubmissionsForAssignmentResponse_Submission {
	if x != nil {
		return x.Submissions
	}
	return nil
}

func (x *FindAllSubmissionsForAssignmentResponse) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *FindAllSubmissionsForAssignmentResponse) GetAssignmentName() string {
	if x != nil {
		return x.AssignmentName
	}
	return ""
}

func (x *FindAllSubmissionsForAssignmentResponse) GetAssignerId() string {
	if x != nil {
		return x.AssignerId
	}
	return ""
}

func (x *FindAllSubmissionsForAssignmentResponse) GetAssignerName() string {
	if x != nil {
		return x.AssignerName
	}
	return ""
}

type FindAllStudentAssignmentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationRequest *PaginationRequest `protobuf:"bytes,1,opt,name=pagination_request,json=paginationRequest,proto3" json:"pagination_request,omitempty"`
	FromDate          string             `protobuf:"bytes,2,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate            string             `protobuf:"bytes,3,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
}

func (x *FindAllStudentAssignmentsRequest) Reset() {
	*x = FindAllStudentAssignmentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllStudentAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllStudentAssignmentsRequest) ProtoMessage() {}

func (x *FindAllStudentAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllStudentAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*FindAllStudentAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{28}
}

func (x *FindAllStudentAssignmentsRequest) GetPaginationRequest() *PaginationRequest {
	if x != nil {
		return x.PaginationRequest
	}
	return nil
}

func (x *FindAllStudentAssignmentsRequest) GetFromDate() string {
	if x != nil {
		return x.FromDate
	}
	return ""
}

func (x *FindAllStudentAssignmentsRequest) GetToDate() string {
	if x != nil {
		return x.ToDate
	}
	return ""
}

type FindAllStudentAssignmentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments        []*StudentAssignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	PaginationMetadata *PaginationMetadata  `protobuf:"bytes,2,opt,name=pagination_metadata,json=paginationMetadata,proto3" json:"pagination_metadata,omitempty"`
}

func (x *FindAllStudentAssignmentsResponse) Reset() {
	*x = FindAllStudentAssignmentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllStudentAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllStudentAssignmentsResponse) ProtoMessage() {}

func (x *FindAllStudentAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllStudentAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*FindAllStudentAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{29}
}

func (x *FindAllStudentAssignmentsResponse) GetAssignments() []*StudentAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *FindAllStudentAssignmentsResponse) GetPaginationMetadata() *PaginationMetadata {
	if x != nil {
		return x.PaginationMetadata
	}
	return nil
}

type StudentAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AssignerId    string                        `protobuf:"bytes,4,opt,name=assigner_id,json=assignerId,proto3" json:"assigner_id,omitempty"`
	AssignerName  string                        `protobuf:"bytes,5,opt,name=assigner_name,json=assignerName,proto3" json:"assigner_name,omitempty"`
	UpdatedAt     string                        `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeadlineAt    string                        `protobuf:"bytes,7,opt,name=deadline_at,json=deadlineAt,proto3" json:"deadline_at,omitempty"`
	Submission    *StudentAssignment_Submission `protobuf:"bytes,8,opt,name=submission,proto3" json:"submission,omitempty"`
	HasSubmission bool                          `protobuf:"varint,9,opt,name=has_submission,json=hasSubmission,proto3" json:"has_submission,omitempty"`
}

func (x *StudentAssignment) Reset() {
	*x = StudentAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentAssignment) ProtoMessage() {}

func (x *StudentAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentAssignment.ProtoReflect.Descriptor instead.
func (*StudentAssignment) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{30}
}

func (x *StudentAssignment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StudentAssignment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudentAssignment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StudentAssignment) GetAssignerId() string {
	if x != nil {
		return x.AssignerId
	}
	return ""
}

func (x *StudentAssignment) GetAssignerName() string {
	if x != nil {
		return x.AssignerName
	}
	return ""
}

func (x *StudentAssignment) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StudentAssignment) GetDeadlineAt() string {
	if x != nil {
		return x.DeadlineAt
	}
	return ""
}

func (x *StudentAssignment) GetSubmission() *StudentAssignment_Submission {
	if x != nil {
		return x.Submission
	}
	return nil
}

func (x *StudentAssignment) GetHasSubmission() bool {
	if x != nil {
		return x.HasSubmission
	}
	return false
}

type StudentSubmission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AssignmentId           string `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	AssignmentName         string `protobuf:"bytes,3,opt,name=assignment_name,json=assignmentName,proto3" json:"assignment_name,omitempty"`
	AssignmentDescription  string `protobuf:"bytes,4,opt,name=assignment_description,json=assignmentDescription,proto3" json:"assignment_description,omitempty"`
	AssignmentAssignerId   string `protobuf:"bytes,5,opt,name=assignment_assigner_id,json=assignmentAssignerId,proto3" json:"assignment_assigner_id,omitempty"`
	AssignmentAssignerName string `protobuf:"bytes,6,opt,name=assignment_assigner_name,json=assignmentAssignerName,proto3" json:"assignment_assigner_name,omitempty"`
	AssignmentDeadlineAt   string `protobuf:"bytes,7,opt,name=assignment_deadline_at,json=assignmentDeadlineAt,proto3" json:"assignment_deadline_at,omitempty"`
	SubmissionCode         string `protobuf:"bytes,8,opt,name=submission_code,json=submissionCode,proto3" json:"submission_code,omitempty"`
	UpdatedAt              string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *StudentSubmission) Reset() {
	*x = StudentSubmission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentSubmission) ProtoMessage() {}

func (x *StudentSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentSubmission.ProtoReflect.Descriptor instead.
func (*StudentSubmission) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{31}
}

func (x *StudentSubmission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StudentSubmission) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *StudentSubmission) GetAssignmentName() string {
	if x != nil {
		return x.AssignmentName
	}
	return ""
}

func (x *StudentSubmission) GetAssignmentDescription() string {
	if x != nil {
		return x.AssignmentDescription
	}
	return ""
}

func (x *StudentSubmission) GetAssignmentAssignerId() string {
	if x != nil {
		return x.AssignmentAssignerId
	}
	return ""
}

func (x *StudentSubmission) GetAssignmentAssignerName() string {
	if x != nil {
		return x.AssignmentAssignerName
	}
	return ""
}

func (x *StudentSubmission) GetAssignmentDeadlineAt() string {
	if x != nil {
		return x.AssignmentDeadlineAt
	}
	return ""
}

func (x *StudentSubmission) GetSubmissionCode() string {
	if x != nil {
		return x.SubmissionCode
	}
	return ""
}

func (x *StudentSubmission) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type SubmitStudentSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssignmentId   string `protobuf:"bytes,1,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	SubmissionCode string `protobuf:"bytes,2,opt,name=submission_code,json=submissionCode,proto3" json:"submission_code,omitempty"`
}

func (x *SubmitStudentSubmissionRequest) Reset() {
	*x = SubmitStudentSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitStudentSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitStudentSubmissionRequest) ProtoMessage() {}

func (x *SubmitStudentSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitStudentSubmissionRequest.ProtoReflect.Descriptor instead.
func (*SubmitStudentSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{32}
}

func (x *SubmitStudentSubmissionRequest) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *SubmitStudentSubmissionRequest) GetSubmissionCode() string {
	if x != nil {
		return x.SubmissionCode
	}
	return ""
}

type UpdateStudentSubmissionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId   string `protobuf:"bytes,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	SubmissionCode string `protobuf:"bytes,2,opt,name=submission_code,json=submissionCode,proto3" json:"submission_code,omitempty"`
}

func (x *UpdateStudentSubmissionRequest) Reset() {
	*x = UpdateStudentSubmissionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStudentSubmissionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStudentSubmissionRequest) ProtoMessage() {}

func (x *UpdateStudentSubmissionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStudentSubmissionRequest.ProtoReflect.Descriptor instead.
func (*UpdateStudentSubmissionRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateStudentSubmissionRequest) GetSubmissionId() string {
	if x != nil {
		return x.SubmissionId
	}
	return ""
}

func (x *UpdateStudentSubmissionRequest) GetSubmissionCode() string {
	if x != nil {
		return x.SubmissionCode
	}
	return ""
}

type ActivateManagedUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActivationToken string `protobuf:"bytes,2,opt,name=activation_token,json=activationToken,proto3" json:"activation_token,omitempty"`
}

func (x *ActivateManagedUserRequest) Reset() {
	*x = ActivateManagedUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateManagedUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateManagedUserRequest) ProtoMessage() {}

func (x *ActivateManagedUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateManagedUserRequest.ProtoReflect.Descriptor instead.
func (*ActivateManagedUserRequest) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{34}
}

func (x *ActivateManagedUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActivateManagedUserRequest) GetActivationToken() string {
	if x != nil {
		return x.ActivationToken
	}
	return ""
}

type FindAllSubmissionsForAssignmentResponse_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubmitterId   string `protobuf:"bytes,4,opt,name=submitter_id,json=submitterId,proto3" json:"submitter_id,omitempty"`
	SubmitterName string `protobuf:"bytes,5,opt,name=submitter_name,json=submitterName,proto3" json:"submitter_name,omitempty"`
}

func (x *FindAllSubmissionsForAssignmentResponse_Submission) Reset() {
	*x = FindAllSubmissionsForAssignmentResponse_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllSubmissionsForAssignmentResponse_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllSubmissionsForAssignmentResponse_Submission) ProtoMessage() {}

func (x *FindAllSubmissionsForAssignmentResponse_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllSubmissionsForAssignmentResponse_Submission.ProtoReflect.Descriptor instead.
func (*FindAllSubmissionsForAssignmentResponse_Submission) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{27, 0}
}

func (x *FindAllSubmissionsForAssignmentResponse_Submission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FindAllSubmissionsForAssignmentResponse_Submission) GetSubmitterId() string {
	if x != nil {
		return x.SubmitterId
	}
	return ""
}

func (x *FindAllSubmissionsForAssignmentResponse_Submission) GetSubmitterName() string {
	if x != nil {
		return x.SubmitterName
	}
	return ""
}

type StudentAssignment_Submission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SubmissionCode string `protobuf:"bytes,2,opt,name=submission_code,json=submissionCode,proto3" json:"submission_code,omitempty"`
	Grade          int32  `protobuf:"varint,3,opt,name=grade,proto3" json:"grade,omitempty"`
	UpdatedAt      string `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsGraded       bool   `protobuf:"varint,5,opt,name=is_graded,json=isGraded,proto3" json:"is_graded,omitempty"`
}

func (x *StudentAssignment_Submission) Reset() {
	*x = StudentAssignment_Submission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_autograd_v1_autograd_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentAssignment_Submission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentAssignment_Submission) ProtoMessage() {}

func (x *StudentAssignment_Submission) ProtoReflect() protoreflect.Message {
	mi := &file_autograd_v1_autograd_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentAssignment_Submission.ProtoReflect.Descriptor instead.
func (*StudentAssignment_Submission) Descriptor() ([]byte, []int) {
	return file_autograd_v1_autograd_proto_rawDescGZIP(), []int{30, 0}
}

func (x *StudentAssignment_Submission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StudentAssignment_Submission) GetSubmissionCode() string {
	if x != nil {
		return x.SubmissionCode
	}
	return ""
}

func (x *StudentAssignment_Submission) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *StudentAssignment_Submission) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StudentAssignment_Submission) GetIsGraded() bool {
	if x != nil {
		return x.IsGraded
	}
	return false
}

var File_autograd_v1_autograd_proto protoreflect.FileDescriptor

var file_autograd_v1_autograd_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x75,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x3b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x28, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x73, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x58, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22,
	0x51, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x4d, 0x0a, 0x12, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x4d, 0x0a,
	0x12, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x09,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2e, 0x0a,
	0x08, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x81, 0x03,
	0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x08, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0f, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0d, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x0e, 0x63, 0x61, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x41, 0x74, 0x12, 0x4d, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xc9, 0x02, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x37, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12,
	0x44, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xbb, 0x01,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x12, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x73,
	0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13,
	0x63, 0x61, 0x73, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x73, 0x65, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x12, 0x63, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x61,
	0x73, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x61, 0x73, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x61,
	0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x6a, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d,
	0x0a, 0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa9, 0x01,
	0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x13, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6b, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c,
	0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x50, 0x0a, 0x13, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x9c, 0x01, 0x0a, 0x26, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4d, 0x0a, 0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75,
	0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x88, 0x03, 0x0a, 0x27, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x61, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x66, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa7,
	0x01, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x12, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x21, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x50, 0x0a, 0x13, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x12,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xeb, 0x03, 0x0a, 0x11, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x41, 0x74, 0x12, 0x49, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x97, 0x01, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x47, 0x72, 0x61, 0x64, 0x65, 0x64,
	0x22, 0x96, 0x03, 0x0a, 0x11, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x41,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6e, 0x0a, 0x1e, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6e, 0x0a, 0x1e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x60, 0x0a, 0x1a, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2a, 0x64, 0x0a, 0x0e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x53,
	0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e,
	0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x10,
	0x02, 0x32, 0xbe, 0x0d, 0x0a, 0x0f, 0x41, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x13, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x6a, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61,
	0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x41,
	0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x1e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x46, 0x6f, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33,
	0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x46,
	0x6f, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x24, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x12, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x58, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x2d, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x57, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67,
	0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x17, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e,
	0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x19, 0x2e, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x61, 0x68, 0x6d, 0x69, 0x66, 0x61, 0x6e, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x64, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_autograd_v1_autograd_proto_rawDescOnce sync.Once
	file_autograd_v1_autograd_proto_rawDescData = file_autograd_v1_autograd_proto_rawDesc
)

func file_autograd_v1_autograd_proto_rawDescGZIP() []byte {
	file_autograd_v1_autograd_proto_rawDescOnce.Do(func() {
		file_autograd_v1_autograd_proto_rawDescData = protoimpl.X.CompressGZIP(file_autograd_v1_autograd_proto_rawDescData)
	})
	return file_autograd_v1_autograd_proto_rawDescData
}

var file_autograd_v1_autograd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_autograd_v1_autograd_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_autograd_v1_autograd_proto_goTypes = []interface{}{
	(AssignmentType)(0),                                        // 0: autograd.v1.AssignmentType
	(*Empty)(nil),                                              // 1: autograd.v1.Empty
	(*CreatedResponse)(nil),                                    // 2: autograd.v1.CreatedResponse
	(*PingResponse)(nil),                                       // 3: autograd.v1.PingResponse
	(*FindByIDRequest)(nil),                                    // 4: autograd.v1.FindByIDRequest
	(*DeleteByIDRequest)(nil),                                  // 5: autograd.v1.DeleteByIDRequest
	(*PaginationMetadata)(nil),                                 // 6: autograd.v1.PaginationMetadata
	(*PaginationRequest)(nil),                                  // 7: autograd.v1.PaginationRequest
	(*CreateManagedUserRequest)(nil),                           // 8: autograd.v1.CreateManagedUserRequest
	(*TimestampMetadata)(nil),                                  // 9: autograd.v1.TimestampMetadata
	(*AssignmentFile)(nil),                                     // 10: autograd.v1.AssignmentFile
	(*SubmissionFile)(nil),                                     // 11: autograd.v1.SubmissionFile
	(*Submitter)(nil),                                          // 12: autograd.v1.Submitter
	(*Assigner)(nil),                                           // 13: autograd.v1.Assigner
	(*Assignment)(nil),                                         // 14: autograd.v1.Assignment
	(*Submission)(nil),                                         // 15: autograd.v1.Submission
	(*UpdateAssignmentRequest)(nil),                            // 16: autograd.v1.UpdateAssignmentRequest
	(*CreateAssignmentRequest)(nil),                            // 17: autograd.v1.CreateAssignmentRequest
	(*CreateSubmissionRequest)(nil),                            // 18: autograd.v1.CreateSubmissionRequest
	(*UpdateSubmissionRequest)(nil),                            // 19: autograd.v1.UpdateSubmissionRequest
	(*LoginRequest)(nil),                                       // 20: autograd.v1.LoginRequest
	(*LoginResponse)(nil),                                      // 21: autograd.v1.LoginResponse
	(*FindAllAssignmentsRequest)(nil),                          // 22: autograd.v1.FindAllAssignmentsRequest
	(*FindAllAssignmentsResponse)(nil),                         // 23: autograd.v1.FindAllAssignmentsResponse
	(*ManagedUser)(nil),                                        // 24: autograd.v1.ManagedUser
	(*FindAllManagedUsersRequest)(nil),                         // 25: autograd.v1.FindAllManagedUsersRequest
	(*FindAllManagedUsersResponse)(nil),                        // 26: autograd.v1.FindAllManagedUsersResponse
	(*FindAllSubmissionsForAssignmentRequest)(nil),             // 27: autograd.v1.FindAllSubmissionsForAssignmentRequest
	(*FindAllSubmissionsForAssignmentResponse)(nil),            // 28: autograd.v1.FindAllSubmissionsForAssignmentResponse
	(*FindAllStudentAssignmentsRequest)(nil),                   // 29: autograd.v1.FindAllStudentAssignmentsRequest
	(*FindAllStudentAssignmentsResponse)(nil),                  // 30: autograd.v1.FindAllStudentAssignmentsResponse
	(*StudentAssignment)(nil),                                  // 31: autograd.v1.StudentAssignment
	(*StudentSubmission)(nil),                                  // 32: autograd.v1.StudentSubmission
	(*SubmitStudentSubmissionRequest)(nil),                     // 33: autograd.v1.SubmitStudentSubmissionRequest
	(*UpdateStudentSubmissionRequest)(nil),                     // 34: autograd.v1.UpdateStudentSubmissionRequest
	(*ActivateManagedUserRequest)(nil),                         // 35: autograd.v1.ActivateManagedUserRequest
	(*FindAllSubmissionsForAssignmentResponse_Submission)(nil), // 36: autograd.v1.FindAllSubmissionsForAssignmentResponse.Submission
	(*StudentAssignment_Submission)(nil),                       // 37: autograd.v1.StudentAssignment.Submission
}
var file_autograd_v1_autograd_proto_depIdxs = []int32{
	9,  // 0: autograd.v1.AssignmentFile.timestamp_metadata:type_name -> autograd.v1.TimestampMetadata
	9,  // 1: autograd.v1.SubmissionFile.timestamp_metadata:type_name -> autograd.v1.TimestampMetadata
	13, // 2: autograd.v1.Assignment.assigner:type_name -> autograd.v1.Assigner
	10, // 3: autograd.v1.Assignment.case_input_file:type_name -> autograd.v1.AssignmentFile
	10, // 4: autograd.v1.Assignment.case_output_file:type_name -> autograd.v1.AssignmentFile
	9,  // 5: autograd.v1.Assignment.timestamp_metadata:type_name -> autograd.v1.TimestampMetadata
	14, // 6: autograd.v1.Submission.assignment:type_name -> autograd.v1.Assignment
	12, // 7: autograd.v1.Submission.submitter:type_name -> autograd.v1.Submitter
	11, // 8: autograd.v1.Submission.submission_file:type_name -> autograd.v1.SubmissionFile
	9,  // 9: autograd.v1.Submission.timestamp_metadata:type_name -> autograd.v1.TimestampMetadata
	7,  // 10: autograd.v1.FindAllAssignmentsRequest.pagination_request:type_name -> autograd.v1.PaginationRequest
	14, // 11: autograd.v1.FindAllAssignmentsResponse.assignments:type_name -> autograd.v1.Assignment
	6,  // 12: autograd.v1.FindAllAssignmentsResponse.pagination_metadata:type_name -> autograd.v1.PaginationMetadata
	9,  // 13: autograd.v1.ManagedUser.timestamp_metadata:type_name -> autograd.v1.TimestampMetadata
	7,  // 14: autograd.v1.FindAllManagedUsersRequest.pagination_request:type_name -> autograd.v1.PaginationRequest
	24, // 15: autograd.v1.FindAllManagedUsersResponse.managed_users:type_name -> autograd.v1.ManagedUser
	6,  // 16: autograd.v1.FindAllManagedUsersResponse.pagination_metadata:type_name -> autograd.v1.PaginationMetadata
	7,  // 17: autograd.v1.FindAllSubmissionsForAssignmentRequest.pagination_request:type_name -> autograd.v1.PaginationRequest
	36, // 18: autograd.v1.FindAllSubmissionsForAssignmentResponse.submissions:type_name -> autograd.v1.FindAllSubmissionsForAssignmentResponse.Submission
	7,  // 19: autograd.v1.FindAllStudentAssignmentsRequest.pagination_request:type_name -> autograd.v1.PaginationRequest
	31, // 20: autograd.v1.FindAllStudentAssignmentsResponse.assignments:type_name -> autograd.v1.StudentAssignment
	6,  // 21: autograd.v1.FindAllStudentAssignmentsResponse.pagination_metadata:type_name -> autograd.v1.PaginationMetadata
	37, // 22: autograd.v1.StudentAssignment.submission:type_name -> autograd.v1.StudentAssignment.Submission
	1,  // 23: autograd.v1.AutogradService.Ping:input_type -> autograd.v1.Empty
	8,  // 24: autograd.v1.AutogradService.CreateManagedUser:input_type -> autograd.v1.CreateManagedUserRequest
	35, // 25: autograd.v1.AutogradService.ActivateManagedUser:input_type -> autograd.v1.ActivateManagedUserRequest
	25, // 26: autograd.v1.AutogradService.FindAllManagedUsers:input_type -> autograd.v1.FindAllManagedUsersRequest
	4,  // 27: autograd.v1.AutogradService.FindAssignment:input_type -> autograd.v1.FindByIDRequest
	22, // 28: autograd.v1.AutogradService.FindAllAssignments:input_type -> autograd.v1.FindAllAssignmentsRequest
	4,  // 29: autograd.v1.AutogradService.FindSubmission:input_type -> autograd.v1.FindByIDRequest
	27, // 30: autograd.v1.AutogradService.FindAllSubmissionForAssignment:input_type -> autograd.v1.FindAllSubmissionsForAssignmentRequest
	17, // 31: autograd.v1.AutogradService.CreateAssignment:input_type -> autograd.v1.CreateAssignmentRequest
	16, // 32: autograd.v1.AutogradService.UpdateAssignment:input_type -> autograd.v1.UpdateAssignmentRequest
	5,  // 33: autograd.v1.AutogradService.DeleteAssignment:input_type -> autograd.v1.DeleteByIDRequest
	18, // 34: autograd.v1.AutogradService.CreateSubmission:input_type -> autograd.v1.CreateSubmissionRequest
	19, // 35: autograd.v1.AutogradService.UpdateSubmission:input_type -> autograd.v1.UpdateSubmissionRequest
	5,  // 36: autograd.v1.AutogradService.DeleteSubmission:input_type -> autograd.v1.DeleteByIDRequest
	29, // 37: autograd.v1.AutogradService.FindAllStudentAssignments:input_type -> autograd.v1.FindAllStudentAssignmentsRequest
	4,  // 38: autograd.v1.AutogradService.FindStudentAssignment:input_type -> autograd.v1.FindByIDRequest
	33, // 39: autograd.v1.AutogradService.SubmitStudentSubmission:input_type -> autograd.v1.SubmitStudentSubmissionRequest
	34, // 40: autograd.v1.AutogradService.UpdateStudentSubmission:input_type -> autograd.v1.UpdateStudentSubmissionRequest
	20, // 41: autograd.v1.AutogradService.Login:input_type -> autograd.v1.LoginRequest
	3,  // 42: autograd.v1.AutogradService.Ping:output_type -> autograd.v1.PingResponse
	2,  // 43: autograd.v1.AutogradService.CreateManagedUser:output_type -> autograd.v1.CreatedResponse
	1,  // 44: autograd.v1.AutogradService.ActivateManagedUser:output_type -> autograd.v1.Empty
	26, // 45: autograd.v1.AutogradService.FindAllManagedUsers:output_type -> autograd.v1.FindAllManagedUsersResponse
	14, // 46: autograd.v1.AutogradService.FindAssignment:output_type -> autograd.v1.Assignment
	23, // 47: autograd.v1.AutogradService.FindAllAssignments:output_type -> autograd.v1.FindAllAssignmentsResponse
	15, // 48: autograd.v1.AutogradService.FindSubmission:output_type -> autograd.v1.Submission
	28, // 49: autograd.v1.AutogradService.FindAllSubmissionForAssignment:output_type -> autograd.v1.FindAllSubmissionsForAssignmentResponse
	2,  // 50: autograd.v1.AutogradService.CreateAssignment:output_type -> autograd.v1.CreatedResponse
	1,  // 51: autograd.v1.AutogradService.UpdateAssignment:output_type -> autograd.v1.Empty
	1,  // 52: autograd.v1.AutogradService.DeleteAssignment:output_type -> autograd.v1.Empty
	2,  // 53: autograd.v1.AutogradService.CreateSubmission:output_type -> autograd.v1.CreatedResponse
	1,  // 54: autograd.v1.AutogradService.UpdateSubmission:output_type -> autograd.v1.Empty
	1,  // 55: autograd.v1.AutogradService.DeleteSubmission:output_type -> autograd.v1.Empty
	30, // 56: autograd.v1.AutogradService.FindAllStudentAssignments:output_type -> autograd.v1.FindAllStudentAssignmentsResponse
	31, // 57: autograd.v1.AutogradService.FindStudentAssignment:output_type -> autograd.v1.StudentAssignment
	2,  // 58: autograd.v1.AutogradService.SubmitStudentSubmission:output_type -> autograd.v1.CreatedResponse
	1,  // 59: autograd.v1.AutogradService.UpdateStudentSubmission:output_type -> autograd.v1.Empty
	21, // 60: autograd.v1.AutogradService.Login:output_type -> autograd.v1.LoginResponse
	42, // [42:61] is the sub-list for method output_type
	23, // [23:42] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_autograd_v1_autograd_proto_init() }
func file_autograd_v1_autograd_proto_init() {
	if File_autograd_v1_autograd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_autograd_v1_autograd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateManagedUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimestampMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignmentFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmissionFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submitter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assigner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllAssignmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllAssignmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManagedUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllManagedUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllManagedUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllSubmissionsForAssignmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllSubmissionsForAssignmentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllStudentAssignmentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllStudentAssignmentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentSubmission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitStudentSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStudentSubmissionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateManagedUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllSubmissionsForAssignmentResponse_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_autograd_v1_autograd_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentAssignment_Submission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_autograd_v1_autograd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_autograd_v1_autograd_proto_goTypes,
		DependencyIndexes: file_autograd_v1_autograd_proto_depIdxs,
		EnumInfos:         file_autograd_v1_autograd_proto_enumTypes,
		MessageInfos:      file_autograd_v1_autograd_proto_msgTypes,
	}.Build()
	File_autograd_v1_autograd_proto = out.File
	file_autograd_v1_autograd_proto_rawDesc = nil
	file_autograd_v1_autograd_proto_goTypes = nil
	file_autograd_v1_autograd_proto_depIdxs = nil
}
